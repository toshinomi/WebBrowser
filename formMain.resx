<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXWBjWnd3
        ecVNTVUkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE1N
        TSS3uLn6tbW2/3+AgeBLUlIiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAODg4CYWFiL/Z2dn/tbW1/31+gN5PT08gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOXl5avw8PDI7+/vyO3t7cjq6urI6enpyObm
        5sjk5OTI4eHiyODg4Mjd3d3I09TU0pydn/7Z2dr/tLS1/35+gem7u7zIzs7PyM3NzcjKysrIyMjJyMbG
        xsjExMXIwcHDyL+/wMi9vb/Iu7u8yLCwsaUAAAAAAAAAAAAAAAAAAAAA7u7u2vv7+//6+fj/+Pf1//f2
        9P/29PL/9PPx//Py8P/y8O7/8O/t/+/u7P/u7Or/5OPh/6Ghov/Z2dr/tLS1/4iIiv/T0tH/5OPh/+Lh
        3//h4N7/4N/d/9/d2//d3Nr/3NrZ/9ra2P/Gxsf/t7e30gAAAAAAAAAAAAAAAAAAAADu7u7a/Pz8/9Kr
        Zf/BiSb/w4so/8aOKv/IkSz/y5Mu/82VMP/RmjT/2KI8/9ujPv/dpT//1qJB/5yQev/Z2dr/tLS0/4qC
        c//bqUj/7bRJ/++2Sv/wuEv/8bhK//K4Sv/1u0z/+dCC/87Ozv+3t7fSAAAAAAAAAAAAAAAAAAAAAO7u
        7tr8/Pz/0apl/7+IJf/Ciif/xIwp/8ePK//Jki3/zpcy/9ihPf/cpUD/3qlD/+GrRf/jrEb/2qdG/5yR
        ff/Z2tr/tLS0/4qBcf/cqkn/7bVJ//C3S//yuUz/8rhL//O5S//4z4H/zs7O/7e3t9IAAAAAAAAAAAAA
        AAAAAAAA7u7u2vz8/P/QqWT/vock/8CJJv/Diyj/xY0q/8qTL//WoD3/2aJA/9ylQf/ep0P/4apF/+Os
        Rv/lrkj/3alK/52Sfv/a2tr/s7O0/4l/bf/pskj/7rZK/+y0Sv/grk3/469K//TMf//Ozs7/t7e30gAA
        AAAAAAAAAAAAAAAAAADu7u7a/Pz8/8+oY/+8hiT/v4gl/8GKJ//Hjyz/zpg2/9agPv/Yoj//2qRB/92m
        Q//gqET/4qxG/+StSP/nsEr/3apL/52SgP/T09T/vLu7/6mLVP+wmnL/t7Ot/76/wP+6urv/r6yn/52d
        n/+xsbLWAAAAAAAAAAAAAAAAAAAAAO3t7dv8/Pz/zadj/7uEI/+9hiT/w4wq/8aPLP/Rmzn/1Z8+/9eh
        P//ao0H/3KVC/+OzXP/t06H/7NGf/+rPnv/ozpz/28Wa/5iXlv/Cw8T/0NDQ/8rKy/+zsrD/tKye/7qs
        kv/FuKD/zc3O/5KTle1ETk4aAAAAAAAAAAAAAAAA7e3t2/z8/P/MpmL/uYIi/76HJv/CjCr/xY4s/9Gb
        O//Unj3/1qA//9miQP/bpUL/5b10//39/f/+/v7//f39//39/f/8/P3/7Ozs/7a2uP/ExMX/3N3d/+Tk
        5P/f39//w7Wc/9m+iv+6urv/ysrL/4aGicMAAAADAAAAAAAAAADt7e3b/Pz8/8ulYf+4gSH/vocn/8GL
        Kf/EjSv/0Jo6/9OePf/Wnz//2KJB/9qkQv/kvHP//f39//////////////////////+7u7z/0NDR/9ra
        2v/k5OT/4uLi/97e3v/BtZ//1b2Q/8DAwf+2trf6wMDB/lhYW1EAAAAAAAAAAO3t7dv8/Pz/yqNg/7iB
        Iv+9hib/wIkp/8KMK//NmDj/0pw8/9WfPv/XoUD/2aNC/+G5c//9/f3//////////////////f39/7m6
        u//ExMX/3d3d/9zc3P/b29v/2dnZ/8G4p//UwZz/xcXF/7y8vO/MzM3oent+owAAAAAAAAAA7e3t2/z8
        /P/Jol//uIEi/7uFJf++hyj/wYsq/8iTM//SnDz/054+/9agQP/ZokH/4Llz//39/f//////////////
        ///5+fn/uru8/8XFxv/a2tr/29vb/9vb2//a2tr/yMCy/9jIq//Nzc3/yMjI8s7Oz9uJi43GAAAAAAAA
        AADt7e3b/Pz8/8ihX/+3gSL/uoMl/72GJ/+/iSn/w4ws/8+aOv/SnT7/1Z8//9eiQf/fuXL//f39////
        //////////////v7+/+4uLr/ycnK/93d3f/f39//4ODg/+Dg4P/Ry8D/39K6/9fX1//U1NT009PU44aG
        iLwAAAAAAAAAAO3t7dv8/Pz/yKFf/7aAIf+5giT/u4Ym/76IKP/Biyr/xpEw/9GcPf/Unz//1qFB/963
        cv/9/f3//////////////////v7+/7W1tv/Pz9D/5eXl/+bm5v/o6Oj/6Ojo/9zXzf/o3cn/4eHh/93d
        3fbOz8/3Z2drhwAAAAAAAAAA7e3t2/z8/P/HoF7/tX4g/7eBIv+6hCX/vYYn/8CKKf/CjCz/yJIy/9Kd
        Pv/VoED/3rdy//39/f//////////////////////y8vM/8rKy//b29z/7u7u/+/v7//w8PD/5uLa/+/n
        1v/q6ur/29vb/qKjpPhLS1IlAAAAAAAAAADt7e3b/Pz8/8WfXP+0fR//toAi/7mCJP+8hSb/vogp/8GL
        K//Eji3/x5Ew/9CaOv/dt3H//Pz8//z8/P/7+/v/+vr6//n5+f/29vb/p6ep/8/Q0P/e3t//8/Pz//T0
        9P/u6+X/8uvf/9/f4P+5ubr/ZGRpdwAAAAAAAAAAAAAAAO3t7dv8/Pz/w51b/7B7Hv+0fiH/uIEj/7qE
        Jv+9hif/wIkq/8KMLP/Fjy7/yJIx/6uEPf9WWFz/VFZb/1NVWf9RU1j/UFJW/05RVf9kY2L/cnBs/7e3
        uf/S0tL/19fY/9fX1v/Ozc3/oaGj/4iJjN4AAAABAAAAAAAAAAAAAAAA7e3t2/z8/P/CnFr/rXca/7R9
        IP+2gCL/uYMk/7yFJ/++iCn/wYsr/8SOLv/GkTD/pHku/xUYHv8VGB7/FRge/xUYHv8VGB7/FRge/4Zz
        Uf+nkGb/u5xl/313bv+Ig3z/fnVk/6uYdf+9vb7/t7e42gAAAAAAAAAAAAAAAAAAAADt7e3b/Pz8/8Gb
        Wf+pcxb/sHse/7R+Iv+4gSP/uoUm/72HKP/AiSv/w40t/8WPL//IkjH/l3Iw/4RoNf+FZzT/gmUv/4Rm
        Mf+FZzH/iGo0/4psNv+Nbzn/jG03/5RzOP/RnDr/6cB2/87Ozv+3t7jaAAAAAAAAAAAAAAAAAAAAAO3t
        7dv8/Pz/v5lY/6dxFP+rdBb/snse/7V/Iv+4gyT/u4Un/76IKf/Biyv/xI0t/8eQL//JkzL/yZIw/8WN
        Kv/Hjyv/ypIs/8yULv/PljD/0Zgy/9ObNP/WnTb/2aA4/9yjOf/nv3X/zs7O/7e3uNoAAAAAAAAAAAAA
        AAAAAAAA7e3t2/z8/P/08Oj/8Orf/+/p3v/v6N3/7ujd/+3n3P/t5tz/7Obb/+vl2v/q5Nn/6ePY/+ji
        1//m4NT/5t/U/+Xe0//k3dL/49zR/+Lb0P/h2s//4NrO/9/Zzf/f2Mz/3tfL/97Z0f/IyMn/t7e42gAA
        AAAAAAAAAAAAAAAAAACfoKLaqKmr/6eoqv+lpqn/pKWo/6Okpv+io6X/oKGk/5+gov+enqH/nJ2g/5qc
        nv+Zmp3/mJmb/5aXmv+Vlpj/k5SX/5KTlf+QkZT/j5CT/42Okf+MjZD/i4yO/4mKjf+HiIv/hoeK/4SG
        iP9+f4PaAAAAAAAAAAAAAAAAAAAAABUYHdoWGR//Fhkf/xYZH/8WGR//Fhkf/xYZH/8WGR//Fhkf/xYZ
        H/8WGR//Fhkf/xYZH/8WGR//Fhkf/xYZH/9bWln/amdi/xwfJf8mKS7/b2tk/0tMTf8VGB7/T1BR/29r
        ZP8jJSv/Fhkf/xgcIdoAAAAAAAAAAAAAAAAAAAAAFRgd2hYZH/8WGR//Fhkf/xYZH/8WGR//Fhkf/xYZ
        H/8WGR//Fhkf/xYZH/8WGR//Fhkf/xYZH/8WGR//YV5a/7+SP//Hlz3/kIRu/6aRbf++jjb/1qxd/3Fx
        cv/Cl0r/xJQ6/6iWdP8VGB7/GBwh2gAAAAAAAAAAAAAAAAAAAAAXGSDOFhkf/xYZH/8WGR//Fhkf/xYZ
        H/8WGR//Fhkf/xYZH/8WGR//Fhkf/xYZH/8WGR//Fhkf/xYZH/90bWL/yZhD/9uuWv+kkW3/t5po/9Wp
        Wv/erlT/m5iU/8eXQ//brlz/vaNy/xUYHv8YGyDNAAAAAAAAAAAAAAAAAAAAABseIF0XGiD9GBsh/xgb
        If8YGyH/GBsh/xgbIf8YGyH/GBsh/xgbIf8YGyH/GBsh/xgbIf8YGyH/GBsh/yMmLP+Xi3X/qJh7/zg6
        Pv9LS0z/rZt8/4mAcf8cHyX/jIJy/62cfP9GR0j/Fxog/RsbIVwAAAAAAAAAAAAAAAAAAAAAAAAAAB8f
        I0EsLjOgNTg8uTU4Prk1OD65NTg+uTU4Prk1OD65NTg+uTU4Prk1OD65NTg+uTU4Prk1OD65NTg+uTU4
        Prk1OD65NTg+uTU4Prk1OD65NTg+uTU4Prk1OD65NTg8uSsuM6AfHyNBAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//j////wf///8D//wAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAAcAA
        AADAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAABwAAAAcAAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AA
        AAPAAAADwAAAA+AAAAf///////////////8=
</value>
  </data>
</root>